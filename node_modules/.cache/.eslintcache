[{"/Users/aleksandr/Desktop/Pok-game/src/index.js":"1","/Users/aleksandr/Desktop/Pok-game/src/App.js":"2","/Users/aleksandr/Desktop/Pok-game/src/store/index.js":"3","/Users/aleksandr/Desktop/Pok-game/src/store/counter.js":"4","/Users/aleksandr/Desktop/Pok-game/src/store/cards.js":"5","/Users/aleksandr/Desktop/Pok-game/src/store/game.js":"6","/Users/aleksandr/Desktop/Pok-game/src/routes/Contacts/index.js":"7","/Users/aleksandr/Desktop/Pok-game/src/routes/About/index.js":"8","/Users/aleksandr/Desktop/Pok-game/src/routes/Game/index.js":"9","/Users/aleksandr/Desktop/Pok-game/src/routes/Home/index.js":"10","/Users/aleksandr/Desktop/Pok-game/src/routes/NotFound/index.js":"11","/Users/aleksandr/Desktop/Pok-game/src/components/Footer/index.js":"12","/Users/aleksandr/Desktop/Pok-game/src/components/MenuHeader/index.js":"13","/Users/aleksandr/Desktop/Pok-game/src/Services/firebase.js":"14","/Users/aleksandr/Desktop/Pok-game/src/components/Layout/index.js":"15","/Users/aleksandr/Desktop/Pok-game/src/components/Header/index.js":"16","/Users/aleksandr/Desktop/Pok-game/src/components/Menu/index.js":"17","/Users/aleksandr/Desktop/Pok-game/src/components/NavBar/index.js":"18","/Users/aleksandr/Desktop/Pok-game/src/routes/Game/routes/Start/index.js":"19","/Users/aleksandr/Desktop/Pok-game/src/routes/Game/routes/Board/index.js":"20","/Users/aleksandr/Desktop/Pok-game/src/routes/Game/routes/Finish/index.js":"21","/Users/aleksandr/Desktop/Pok-game/src/components/PokemonCard/index.js":"22","/Users/aleksandr/Desktop/Pok-game/src/routes/Game/routes/Board/components/Result/index.js":"23","/Users/aleksandr/Desktop/Pok-game/src/routes/Game/routes/Board/components/ArrowChoice/index.js":"24","/Users/aleksandr/Desktop/Pok-game/src/routes/Game/routes/Board/components/PlayerBoard/index.js":"25"},{"size":408,"mtime":1632852680000,"results":"26","hashOfConfig":"27"},{"size":1474,"mtime":1632852680000,"results":"28","hashOfConfig":"27"},{"size":309,"mtime":1632852680000,"results":"29","hashOfConfig":"27"},{"size":568,"mtime":1632852680000,"results":"30","hashOfConfig":"27"},{"size":1300,"mtime":1632852680000,"results":"31","hashOfConfig":"27"},{"size":1363,"mtime":1632852680000,"results":"32","hashOfConfig":"27"},{"size":202,"mtime":1632852680000,"results":"33","hashOfConfig":"27"},{"size":192,"mtime":1632852680000,"results":"34","hashOfConfig":"27"},{"size":577,"mtime":1632852680000,"results":"35","hashOfConfig":"27"},{"size":1548,"mtime":1632863015321,"results":"36","hashOfConfig":"27"},{"size":208,"mtime":1632852680000,"results":"37","hashOfConfig":"27"},{"size":317,"mtime":1632852680000,"results":"38","hashOfConfig":"27"},{"size":583,"mtime":1632852680000,"results":"39","hashOfConfig":"27"},{"size":1466,"mtime":1632852680000,"results":"40","hashOfConfig":"27"},{"size":927,"mtime":1632852680000,"results":"41","hashOfConfig":"27"},{"size":826,"mtime":1632852680000,"results":"42","hashOfConfig":"27"},{"size":852,"mtime":1632852680000,"results":"43","hashOfConfig":"27"},{"size":717,"mtime":1632852680000,"results":"44","hashOfConfig":"27"},{"size":2324,"mtime":1632852680000,"results":"45","hashOfConfig":"27"},{"size":5712,"mtime":1632852680000,"results":"46","hashOfConfig":"27"},{"size":2977,"mtime":1632852680000,"results":"47","hashOfConfig":"27"},{"size":1863,"mtime":1632852680000,"results":"48","hashOfConfig":"27"},{"size":756,"mtime":1632852680000,"results":"49","hashOfConfig":"27"},{"size":273,"mtime":1632852680000,"results":"50","hashOfConfig":"27"},{"size":1052,"mtime":1632852680000,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"18qwukp",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/Users/aleksandr/Desktop/Pok-game/src/index.js",[],["105","106"],"/Users/aleksandr/Desktop/Pok-game/src/App.js",[],"/Users/aleksandr/Desktop/Pok-game/src/store/index.js",[],"/Users/aleksandr/Desktop/Pok-game/src/store/counter.js",[],"/Users/aleksandr/Desktop/Pok-game/src/store/cards.js",[],"/Users/aleksandr/Desktop/Pok-game/src/store/game.js",[],"/Users/aleksandr/Desktop/Pok-game/src/routes/Contacts/index.js",[],"/Users/aleksandr/Desktop/Pok-game/src/routes/About/index.js",[],"/Users/aleksandr/Desktop/Pok-game/src/routes/Game/index.js",[],"/Users/aleksandr/Desktop/Pok-game/src/routes/Home/index.js",[],"/Users/aleksandr/Desktop/Pok-game/src/routes/NotFound/index.js",[],"/Users/aleksandr/Desktop/Pok-game/src/components/Footer/index.js",[],"/Users/aleksandr/Desktop/Pok-game/src/components/MenuHeader/index.js",[],"/Users/aleksandr/Desktop/Pok-game/src/Services/firebase.js",[],"/Users/aleksandr/Desktop/Pok-game/src/components/Layout/index.js",[],"/Users/aleksandr/Desktop/Pok-game/src/components/Header/index.js",[],"/Users/aleksandr/Desktop/Pok-game/src/components/Menu/index.js",[],"/Users/aleksandr/Desktop/Pok-game/src/components/NavBar/index.js",[],"/Users/aleksandr/Desktop/Pok-game/src/routes/Game/routes/Start/index.js",["107"],"import React, {useState, useEffect} from 'react'\nimport Layout from './../../../../components/Layout';\nimport PokemonCard from \"./../../../../components/PokemonCard\";\nimport sComp from \"./style.module.css\";\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectGame , gameMethods} from '../../../../store/game';\nimport { selectCards, getPokemonsAsync } from '../../../../store/cards';\n\nconst StartPage = ({onPageChange}) =>{\n    const gameContext = useSelector(selectGame);\n    const cardsContext = useSelector(selectCards);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [cards, setCards] = useState(cardsContext.deck);\n\n    useEffect(() =>{ \n        dispatch(getPokemonsAsync());\n    }, []);\n    \n    useEffect(() => {\n        setCards(cardsContext.deck);\n    }, [cardsContext])\n\n    const onClickButton = () =>{\n        history.push('/game/board');\n    }\n    const pickCard = (objectId) => {\n        const objTosend = cards[objectId];\n        dispatch(gameMethods.onPokemonAdd({ key : objectId, value : objTosend}));\n        \n        setCards( (prevState) => ({\n            ...prevState,\n            [objectId] : {\n                ...prevState[objectId],\n                isSelected : !prevState[objectId].isSelected\n            }\n        }));\n    }\n    return(\n        <React.Fragment>\n        <div className={sComp.wrapper}>\n            <button onClick={onClickButton}\n                disabled={Object.keys(gameContext.player1).length < 5 }\n            >\n                START THE GAME!\n            </button>\n        </div>\n        <Layout title=\"Pokemons\" colorBg=\"SkyBlue\">\n            <div className={sComp.flex}>\n            {\n                Object.entries(cards).map(([key,item]) => <PokemonCard key={key} objectId={key}\n                    id={item.id} name={item.name} type={item.type} img={item.img} values={item.values}\n                    pickCard={ () =>{\n                        if(Object.keys(gameContext.player1).length < 5 || item.isSelected)\n                        pickCard(key);}} isActive={true} isSelected={item.isSelected}\n                    className={sComp.origin}\n                    />)\n            }\n            </div>\n        </Layout>\n      </React.Fragment>\n    )\n}\n\nexport default StartPage;","/Users/aleksandr/Desktop/Pok-game/src/routes/Game/routes/Board/index.js",["108","109"],"import s from './style.module.css';\nimport { useHistory } from 'react-router-dom';\nimport PokemonCard from '../../../../components/PokemonCard';\nimport PlayerBoard from './components/PlayerBoard';\nimport ArrowChoice from './components/ArrowChoice';\nimport Result from './components/Result';\nimport {useEffect, useState} from 'react'\nimport { useSelector } from 'react-redux';\nimport { selectGame , gameMethods} from '../../../../store/game';\nimport { useDispatch } from 'react-redux';\n\nconst counterWin = (board, player1, player2 ) => {\n    let player1Count = player1.length;\n    let player2Count = player2.length;\n\n    board.forEach(element => {\n        if(element.card?.possession === 'red')\n            player2Count++;\n        if(element.card?.possession === 'blue')\n            player1Count++;\n    });\n\n    return [player1Count, player2Count];\n}\n\nconst BoardPage = () => {\n    const gameContext = useSelector(selectGame);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [board,setBoard] = useState([]);\n    const [player1, setPlayer1] = useState(() => Object.values(gameContext.player1).map(item=>({...item, possession:'blue'})));\n    const [player2,setPlayer2] = useState([]);\n    const [step,setStep] = useState(0);\n    const [chosenCard, setChosenCard] = useState(null);\n    const [result, setResult] = useState(null);\n\n    const getTurn = (currentTurn) => {\n        if(currentTurn !== undefined){\n            return ((currentTurn%2) + 1);\n        }\n        if(Math.random() > 0.5)\n            return 1;\n        else\n            return 2;\n    }\n    \n    const [turn, setTurn] = useState(getTurn(undefined));\n    const cards = gameContext.player1;\n\n    if(Object.keys(cards).length === 0)\n        history.replace('/game');\n\n    useEffect( () => {   \n        async function getResponse () {\n            const boardResponse = await fetch('https://reactmarathon-api.netlify.app/api/board');\n            const boardRequest = await boardResponse.json();\n            setBoard(boardRequest.data);\n\n            const palyer2Response = await fetch('https://reactmarathon-api.netlify.app/api/create-player');\n            const palyer2Request = await palyer2Response.json();\n            setPlayer2(palyer2Request.data.map(item=>({...item, possession:'red'})));\n\n            dispatch(gameMethods.player2Set(palyer2Request.data.map(item=>({...item}))));\n        };\n        getResponse();\n\n\n        /* return () => {\n            gameContext.clean(); \n        }*/\n    }, []);\n    const handleClickBoardPlate = async (position) =>{\n        if(chosenCard && chosenCard.player === turn)\n        {\n            const params = { position, card:chosenCard, board };\n            const res = await fetch('https://reactmarathon-api.netlify.app/api/players-turn', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(params),\n            });\n\n            const request = await res.json();\n\n            setBoard(request.data);\n\n            if(chosenCard.player === 1)\n                setPlayer1(prevState => prevState.filter(t=>t.id !== chosenCard.id));\n\n            if(chosenCard.player === 2)\n                setPlayer2(prevState => prevState.filter(t=>t.id !== chosenCard.id));\n\n            setStep(prevState => { const count =prevState +1 ; return count;})\n            setTurn(prevState => { const newTurn = getTurn(prevState); return newTurn;});\n\n        }\n    }\n    useEffect( () => {\n        async function getResult(){\n            if (step === 9)\n            {\n                const [count1, count2] = counterWin(board,player1,player2);\n                let caption = '';\n                if(count1>count2)\n                {\n                    dispatch(gameMethods.setWinner(1));\n                    caption ='win';\n                }\n                else if (count2 > count1)\n                {\n                    dispatch(gameMethods.setWinner(2));\n                    caption='lose';\n                }\n                else\n                {\n                    dispatch(gameMethods.setWinner(0));\n                    caption = 'draw';\n                }\n                setResult(caption);\n                function sleep(ms) {\n                    return new Promise(resolve => setTimeout(resolve, ms));\n                }\n                await sleep(4000);\n                history.push('/game/finish');\n            };\n        }\n        getResult();\n    },[step]);\n    const chooseCard = (card) => {\n        if( card.player === turn)\n        {\n            setChosenCard(card)\n            return true;\n        }\n        return false;\n    }\n    return (\n        <div className={s.root}>\n            <Result type={result} />\n            <ArrowChoice side={turn} />\n            <div className={s.playerOne}>\n                    <PlayerBoard player={1} cards={player1} onCardChosen={ chooseCard}  />\n            </div>\n            <div className={s.board}>\n                {\n                    board.map( item => (\n                        <div key={item.position}\n                        className={s.boardPlate} \n                        onClick={ () => { !item.card && handleClickBoardPlate(item.position);}}\n                        >\n                            {\n                                item.card && <PokemonCard {...item.card} isActive minimize />\n                            }\n                        </div>\n                    ))\n                }\n            </div>\n            <div className={s.playerTwo}>\n                <PlayerBoard player={2} cards={player2} onCardChosen={ chooseCard} />\n            </div>\n        </div>\n    );\n};\n\nexport default BoardPage;","/Users/aleksandr/Desktop/Pok-game/src/routes/Game/routes/Finish/index.js",[],"/Users/aleksandr/Desktop/Pok-game/src/components/PokemonCard/index.js",[],"/Users/aleksandr/Desktop/Pok-game/src/routes/Game/routes/Board/components/Result/index.js",[],"/Users/aleksandr/Desktop/Pok-game/src/routes/Game/routes/Board/components/ArrowChoice/index.js",[],"/Users/aleksandr/Desktop/Pok-game/src/routes/Game/routes/Board/components/PlayerBoard/index.js",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":19,"column":8,"nodeType":"116","endLine":19,"endColumn":10,"suggestions":"117"},{"ruleId":"114","severity":1,"message":"115","line":71,"column":8,"nodeType":"116","endLine":71,"endColumn":10,"suggestions":"118"},{"ruleId":"114","severity":1,"message":"119","line":129,"column":7,"nodeType":"116","endLine":129,"endColumn":13,"suggestions":"120"},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["123"],["124"],"React Hook useEffect has missing dependencies: 'board', 'dispatch', 'history', 'player1', and 'player2'. Either include them or remove the dependency array.",["125"],"no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},{"desc":"126","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [dispatch]",{"range":"131","text":"132"},{"range":"133","text":"132"},"Update the dependencies array to be: [board, dispatch, history, player1, player2, step]",{"range":"134","text":"135"},[786,788],"[dispatch]",[2494,2496],[4493,4499],"[board, dispatch, history, player1, player2, step]"]