{"ast":null,"code":"import firebase from \"firebase/compat/app\";\nimport 'firebase/compat/database';\nconst firebaseConfig = {\n  apiKey: \"AAIzaSyAbmZeozzXW5uCIJVvYIcA16LjP53cGBJonpm \",\n  authDomain: \"poc-game-1a94f.firebaseapp.com\",\n  databaseURL: \"https://project/poc-game-1a94f-default-rtdb.europe-west1.firebasedatabase.app\",\n  projectId: \"pokemon-game-ae7f6\",\n  storageBucket: \"pokemon-game-ae7f6.appspot.com\",\n  messagingSenderId: \"550206869022\",\n  appId: \"1:550206869022:web:22af1539388769e285e80f\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nclass Firebase {\n  constructor() {\n    this.GetPokemonSocket = callBack => {\n      this.database.ref('pokemons').on('value', snapshot => {\n        callBack && callBack(snapshot.val());\n      });\n    };\n\n    this.OffPokemonSocket = () => {\n      this.database.ref('pokemons').off();\n    };\n\n    this.GetAllPokemons = async () => {\n      return await this.database.ref('pokemons').once('value').then(snapshot => snapshot.val());\n    };\n\n    this.UpdatePokemonById = (id, update) => {\n      this.database.ref('pokemons/' + id).set(update);\n    };\n\n    this.AddNewPokemon = (pokemon, callback) => {\n      const newKey = this.database.ref().child('pokemons').push().key;\n      this.database.ref('pokemons/' + newKey).set(pokemon).then(() => {\n        callback && callback();\n      });\n    };\n\n    this.AddNewPokemonAPI = async (pokemon, userInfo) => {\n      const data = {\n        method: 'POST',\n        body: JSON.stringify({ ...pokemon\n        })\n      };\n      await fetch(`${firebaseConfig.databaseURL}/${userInfo.localId}/pokemons.json?auth=${userInfo.idToken}`, data);\n    };\n\n    this.GetAllPokemonsAPI = async localId => {\n      return await fetch(`${firebaseConfig.databaseURL}/${localId}/pokemons.json`).then(res => res.json());\n    };\n\n    this.GetUserInfoAPI = async idToken => {\n      const data = {\n        method: 'POST',\n        body: JSON.stringify({\n          idToken: idToken\n        })\n      };\n      const response = await fetch(`https://identitytoolkit.googleapis.com/v1/accounts:lookup?key=${firebaseConfig.apiKey}`, data).then(res => res.json());\n      if (response.hasOwnProperty('error')) return false;else {\n        return response.users[0];\n      }\n    };\n\n    this.fire = firebase;\n    this.database = this.fire.database();\n  }\n\n}\n\nconst FirebaseClass = new Firebase();\nexport default FirebaseClass;","map":{"version":3,"sources":["/Users/aleksandr/Desktop/Pok-game — копия/src/Services/firebase.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","Firebase","constructor","GetPokemonSocket","callBack","database","ref","on","snapshot","val","OffPokemonSocket","off","GetAllPokemons","once","then","UpdatePokemonById","id","update","set","AddNewPokemon","pokemon","callback","newKey","child","push","key","AddNewPokemonAPI","userInfo","data","method","body","JSON","stringify","fetch","localId","idToken","GetAllPokemonsAPI","res","json","GetUserInfoAPI","response","hasOwnProperty","users","fire","FirebaseClass"],"mappings":"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","sourcesContent":["import firebase from \"firebase/compat/app\";\nimport 'firebase/compat/database' \n\nconst firebaseConfig = {\n    apiKey: \"AAIzaSyAbmZeozzXW5uCIJVvYIcA16LjP53cGBJonpm \",  \n    authDomain: \"poc-game-1a94f.firebaseapp.com\",\n      databaseURL: \"https://project/poc-game-1a94f-default-rtdb.europe-west1.firebasedatabase.app\",  \n    projectId: \"pokemon-game-ae7f6\",  \n    storageBucket: \"pokemon-game-ae7f6.appspot.com\",  \n    messagingSenderId: \"550206869022\",  \n    appId: \"1:550206869022:web:22af1539388769e285e80f\"  \n  };\n  \n  firebase.initializeApp(firebaseConfig);\n\n  class Firebase{\n\n    constructor() {\n      this.fire = firebase;\n      this.database = this.fire.database();\n    }\n\n    GetPokemonSocket = (callBack) => {\n      this.database.ref('pokemons').on('value', snapshot => {\n        callBack && callBack(snapshot.val());\n      });\n    }\n\n    OffPokemonSocket = () => {\n      this.database.ref('pokemons').off();\n    }\n\n    GetAllPokemons = async () =>{\n      return await this.database.ref('pokemons').once('value').then( snapshot => snapshot.val());\n    }\n\n    UpdatePokemonById = (id, update ) =>\n    {\n      this.database.ref('pokemons/'+ id).set(update);\n    }\n\n    AddNewPokemon = (pokemon, callback) => {\n      const newKey = this.database.ref().child('pokemons').push().key;\n      this.database.ref('pokemons/' + newKey).set(pokemon).then( () => { callback && callback() });\n    }\n\n    AddNewPokemonAPI = async (pokemon, userInfo) => {\n      const data = {\n        method : 'POST',\n        body : JSON.stringify({...pokemon}),\n      }\n      await fetch(`${firebaseConfig.databaseURL}/${userInfo.localId}/pokemons.json?auth=${userInfo.idToken}`, data)\n    }\n\n    GetAllPokemonsAPI = async (localId) => {\n        return await fetch(`${firebaseConfig.databaseURL}/${localId}/pokemons.json`).then(res => res.json());\n    }\n\n    GetUserInfoAPI = async (idToken) => {\n      const data = {\n        method : 'POST',\n        body : JSON.stringify({\n          idToken : idToken\n        }),\n      }\n      const response = await fetch(`https://identitytoolkit.googleapis.com/v1/accounts:lookup?key=${firebaseConfig.apiKey}`, data)\n        .then(res => res.json());\n      if(response.hasOwnProperty('error'))\n        return false;\n      else\n      {\n        return response.users[0];\n      }\n    }\n  }\n\n  const FirebaseClass = new Firebase();\n\n  export default FirebaseClass;"]},"metadata":{},"sourceType":"module"}