{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const slice = createSlice({\n  name: 'game',\n  initialState: {\n    data: Object(),\n    player1: Object(),\n    player2: [],\n    winner: 0\n  },\n  reducers: {\n    onPokemonAdd: (state, action) => {\n      const {\n        key,\n        value\n      } = action.payload;\n      let modP1 = state.player1;\n\n      if (modP1[key]) {\n        const copyState = { ...state.player1\n        };\n        delete copyState[key];\n        modP1 = copyState;\n      } else modP1 = { ...modP1,\n        [key]: value\n      };\n\n      return { ...state,\n        player1: modP1\n      };\n    },\n    player2Set: (state, action) => ({ ...state,\n      player2: action.payload\n    }),\n    clean: (state, action) => ({\n      data: Object(),\n      player1: Object(),\n      player2: [],\n      winner: 0\n    }),\n    setWinner: (state, action) => ({ ...state,\n      winner: action.payload\n    })\n  }\n});\nexport const gameMethods = slice.actions;\nexport const selectGame = state => state.game;\nexport default slice.reducer;","map":{"version":3,"sources":["/Users/aleksandr/Desktop/Pok-game — копия/src/store/game.js"],"names":["createSlice","slice","name","initialState","data","Object","player1","player2","winner","reducers","onPokemonAdd","state","action","key","value","payload","modP1","copyState","player2Set","clean","setWinner","gameMethods","actions","selectGame","game","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,KAAK,GAAGD,WAAW,CAAC;AAC7BE,EAAAA,IAAI,EAAE,MADuB;AAE7BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,IAAI,EAAGC,MAAM,EADH;AAEVC,IAAAA,OAAO,EAAGD,MAAM,EAFN;AAGVE,IAAAA,OAAO,EAAG,EAHA;AAIVC,IAAAA,MAAM,EAAG;AAJC,GAFe;AAQ7BC,EAAAA,QAAQ,EAAE;AACFC,IAAAA,YAAY,EAAE,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAC5B,YAAM;AAACC,QAAAA,GAAD;AAAOC,QAAAA;AAAP,UAAgBF,MAAM,CAACG,OAA7B;AACA,UAAIC,KAAK,GAAGL,KAAK,CAACL,OAAlB;;AACA,UAAIU,KAAK,CAACH,GAAD,CAAT,EACA;AACI,cAAMI,SAAS,GAAG,EAAC,GAAGN,KAAK,CAACL;AAAV,SAAlB;AACA,eAAOW,SAAS,CAACJ,GAAD,CAAhB;AACAG,QAAAA,KAAK,GAAGC,SAAR;AACH,OALD,MAOID,KAAK,GAAG,EAAE,GAAGA,KAAL;AAAY,SAACH,GAAD,GAAQC;AAApB,OAAR;;AACJ,aAAQ,EACJ,GAAGH,KADC;AAEJL,QAAAA,OAAO,EAAEU;AAFL,OAAR;AAIH,KAhBC;AAiBFE,IAAAA,UAAU,EAAG,CAACP,KAAD,EAAOC,MAAP,MAAmB,EAC5B,GAAGD,KADyB;AAE5BJ,MAAAA,OAAO,EAAEK,MAAM,CAACG;AAFY,KAAnB,CAjBX;AAqBFI,IAAAA,KAAK,EAAG,CAACR,KAAD,EAAOC,MAAP,MAAmB;AACvBR,MAAAA,IAAI,EAAGC,MAAM,EADU;AAEvBC,MAAAA,OAAO,EAAGD,MAAM,EAFO;AAGvBE,MAAAA,OAAO,EAAG,EAHa;AAIvBC,MAAAA,MAAM,EAAG;AAJc,KAAnB,CArBN;AA2BFY,IAAAA,SAAS,EAAG,CAACT,KAAD,EAAOC,MAAP,MAAmB,EAC3B,GAAGD,KADwB;AAE3BH,MAAAA,MAAM,EAAEI,MAAM,CAACG;AAFY,KAAnB;AA3BV;AARmB,CAAD,CAAzB;AA2CP,OAAO,MAAMM,WAAW,GAAGpB,KAAK,CAACqB,OAA1B;AACP,OAAO,MAAMC,UAAU,GAAGZ,KAAK,IAAIA,KAAK,CAACa,IAAlC;AAEP,eAAevB,KAAK,CAACwB,OAArB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const slice = createSlice({\n    name: 'game',\n    initialState: {\n        data : Object(),\n        player1 : Object(),\n        player2 : [],\n        winner : 0,\n    },\n    reducers: {\n            onPokemonAdd: (state,action) => {\n                const {key , value} = action.payload;\n                let modP1 = state.player1;\n                if (modP1[key])\n                {\n                    const copyState = {...state.player1};\n                    delete copyState[key];\n                    modP1 = copyState;\n                }\n                else\n                    modP1 = { ...modP1, [key] : value}\n                return ({\n                    ...state,\n                    player1: modP1,\n                })\n            },\n            player2Set : (state,action) => ({\n                ...state,\n                player2: action.payload,\n            }),\n            clean : (state,action) => ({\n                data : Object(),\n                player1 : Object(),\n                player2 : [],\n                winner : 0,\n            }),\n            setWinner : (state,action) => ({\n                ...state,\n                winner: action.payload,\n            }),\n    }\n})\n\n\nexport const gameMethods = slice.actions;\nexport const selectGame = state => state.game;\n\nexport default slice.reducer;"]},"metadata":{},"sourceType":"module"}