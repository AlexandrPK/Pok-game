{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandr/Desktop/Pok-game/src/components/Modal/index.js\",\n    _s = $RefreshSig$();\n\nimport cn from 'classnames';\nimport { useEffect, useRef } from 'react';\nimport s from './style.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Modal({\n  isOpen,\n  title,\n  children,\n  onCloseModal\n}) {\n  _s();\n\n  useEffect(() => {\n    document.querySelector('body').style.overflow = isOpen ? 'hidden' : null;\n  }, [isOpen]);\n  const modalEl = useRef();\n\n  const handleClickCloseModal = () => {\n    onCloseModal && onCloseModal(false);\n  };\n\n  const handleClickRoot = event => {\n    if (!modalEl.current.contains(event.target)) handleClickCloseModal();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cn(s.root, {\n      [s.open]: isOpen\n    }),\n    onClick: handleClickRoot,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.modal,\n      ref: modalEl,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.head,\n        children: [title, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: s.btnClose,\n          onClick: handleClickCloseModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.content,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Modal, \"mv1T48P1BmP4an7n3aYYNZVOnpY=\");\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/Users/aleksandr/Desktop/Pok-game/src/components/Modal/index.js"],"names":["cn","useEffect","useRef","s","Modal","isOpen","title","children","onCloseModal","document","querySelector","style","overflow","modalEl","handleClickCloseModal","handleClickRoot","event","current","contains","target","root","open","modal","head","btnClose","content"],"mappings":";;;AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,OAAOC,CAAP,MAAc,oBAAd;;;AAEA,SAASC,KAAT,CAAe;AAACC,EAAAA,MAAD;AAASC,EAAAA,KAAT;AAAgBC,EAAAA,QAAhB;AAAyBC,EAAAA;AAAzB,CAAf,EAAuD;AAAA;;AACnDP,EAAAA,SAAS,CAAE,MAAM;AACbQ,IAAAA,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,KAA/B,CAAqCC,QAArC,GAAgDP,MAAM,GAAG,QAAH,GAAc,IAApE;AACH,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;AAIA,QAAMQ,OAAO,GAAGX,MAAM,EAAtB;;AAEA,QAAMY,qBAAqB,GAAG,MAAK;AAC/BN,IAAAA,YAAY,IAAIA,YAAY,CAAC,KAAD,CAA5B;AACH,GAFD;;AAGA,QAAMO,eAAe,GAAIC,KAAD,IAAW;AAC/B,QAAI,CAACH,OAAO,CAACI,OAAR,CAAgBC,QAAhB,CAAyBF,KAAK,CAACG,MAA/B,CAAL,EACIL,qBAAqB;AAC5B,GAHD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAEd,EAAE,CAACG,CAAC,CAACiB,IAAH,EAAS;AAAC,OAACjB,CAAC,CAACkB,IAAH,GAAWhB;AAAZ,KAAT,CAAlB;AACK,IAAA,OAAO,EAAEU,eADd;AAAA,2BAEI;AAAK,MAAA,SAAS,EAAEZ,CAAC,CAACmB,KAAlB;AACK,MAAA,GAAG,EAAET,OADV;AAAA,8BAEI;AAAK,QAAA,SAAS,EAAEV,CAAC,CAACoB,IAAlB;AAAA,mBACejB,KADf,eAEI;AAAM,UAAA,SAAS,EAAEH,CAAC,CAACqB,QAAnB;AACM,UAAA,OAAO,EAAEV;AADf;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAUI;AAAK,QAAA,SAAS,EAAEX,CAAC,CAACsB,OAAlB;AAAA,kBACKlB;AADL;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GAjCQH,K;;KAAAA,K;AAmCT,eAAeA,KAAf","sourcesContent":["import cn from 'classnames';\nimport { useEffect, useRef } from 'react';\nimport s from './style.module.css';\n\nfunction Modal({isOpen, title, children,onCloseModal}) {\n    useEffect( () => {\n        document.querySelector('body').style.overflow = isOpen ? 'hidden' : null;\n    }, [isOpen])\n\n    const modalEl = useRef();\n\n    const handleClickCloseModal = () =>{\n        onCloseModal && onCloseModal(false);\n    }\n    const handleClickRoot = (event) => {\n        if( !modalEl.current.contains(event.target) )\n            handleClickCloseModal();\n    }\n    return (\n        <div className={cn(s.root, {[s.open] : isOpen})}\n             onClick={handleClickRoot}>\n            <div className={s.modal} \n                 ref={modalEl}>\n                <div className={s.head}>\n                              {title}\n                    <span className={s.btnClose}\n                          onClick={handleClickCloseModal}\n                            >\n\n                            </span>\n                </div>\n                <div className={s.content}>\n                    {children}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Modal\n"]},"metadata":{},"sourceType":"module"}