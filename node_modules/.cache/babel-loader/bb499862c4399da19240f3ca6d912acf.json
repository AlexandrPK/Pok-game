{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandr/Desktop/Pok-game\\xA0\\u2014 \\u043A\\u043E\\u043F\\u0438\\u044F/src/routes/Game/routes/Finish/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport s from './style.module.css';\nimport cn from 'classnames';\nimport PokemonCard from \"../../../../components/PokemonCard\";\nimport { useSelector } from \"react-redux\";\nimport { selectGame, gameMethods } from '../../../../store/game';\nimport { addPokemonAPI } from \"../../../../store/cards\";\nimport { useDispatch } from 'react-redux';\nimport { hasLocalId } from \"../../../../store/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FinishPage = () => {\n  _s();\n\n  const gameContext = useSelector(selectGame);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [selectedCard, setSelectedCard] = useState(null);\n  const localId = useSelector(hasLocalId);\n  const player1 = gameContext.player1;\n  const [player2, setPlayer2] = useState(gameContext.player2);\n  if (Object.keys(player1).length === 0) history.replace('/game');\n\n  const saveResultAndFinish = () => {\n    if (selectedCard !== null) {\n      delete selectedCard.isSelected;\n      dispatch(addPokemonAPI(selectedCard, {\n        localId: localId,\n        idToken: localStorage.getItem('idToken')\n      }));\n    }\n\n    dispatch(gameMethods.clean());\n    history.push('/game');\n  };\n\n  const pickCard = key => {\n    setPlayer2(prevState => {\n      return prevState.reduce((acc, item) => {\n        const newItem = { ...item,\n          isSelected: false\n        };\n\n        if (newItem.id === key) {\n          setSelectedCard(item);\n          newItem.isSelected = true;\n        }\n\n        acc.push(newItem);\n        return acc;\n      }, []);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.root,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(s.flex, s.playerOne),\n        children: Object.entries(player1).map(([key, item]) => /*#__PURE__*/_jsxDEV(PokemonCard, {\n          objectId: key,\n          id: item.id,\n          name: item.name,\n          type: item.type,\n          img: item.img,\n          values: item.values,\n          isActive: true,\n          isSelected: item.isSelected,\n          className: s.origin\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 69\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.wrapper,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveResultAndFinish,\n          disabled: gameContext.winner === 1 && selectedCard === null,\n          children: \"FINISH GAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(s.flex, s.playerTwo),\n        children: player2.map((item, key) => /*#__PURE__*/_jsxDEV(PokemonCard, {\n          id: item.id,\n          name: item.name,\n          type: item.type,\n          img: item.img,\n          values: item.values,\n          pickCard: () => {\n            if (gameContext.winner === 1) {\n              pickCard(item.id);\n            }\n          },\n          isActive: true,\n          isSelected: item.isSelected,\n          className: s.origin\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 51\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FinishPage, \"1fyRupI3+5n8VnqRnybwJWfLLA0=\", false, function () {\n  return [useSelector, useDispatch, useHistory, useSelector];\n});\n\n_c = FinishPage;\nexport default FinishPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FinishPage\");","map":{"version":3,"sources":["/Users/aleksandr/Desktop/Pok-game — копия/src/routes/Game/routes/Finish/index.js"],"names":["React","useState","useHistory","s","cn","PokemonCard","useSelector","selectGame","gameMethods","addPokemonAPI","useDispatch","hasLocalId","FinishPage","gameContext","dispatch","history","selectedCard","setSelectedCard","localId","player1","player2","setPlayer2","Object","keys","length","replace","saveResultAndFinish","isSelected","idToken","localStorage","getItem","clean","push","pickCard","key","prevState","reduce","acc","item","newItem","id","root","flex","playerOne","entries","map","name","type","img","values","origin","wrapper","winner","playerTwo"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport s from './style.module.css';\nimport cn from 'classnames';\nimport PokemonCard from \"../../../../components/PokemonCard\";\nimport { useSelector } from \"react-redux\";\nimport { selectGame, gameMethods } from '../../../../store/game';\nimport { addPokemonAPI } from \"../../../../store/cards\";\nimport { useDispatch } from 'react-redux';\nimport { hasLocalId } from \"../../../../store/auth\";\n\n\nconst FinishPage = () => {\n    const gameContext = useSelector(selectGame);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [selectedCard, setSelectedCard] = useState(null);\n    const localId = useSelector(hasLocalId);\n\n    const player1 = gameContext.player1;\n    const [player2,setPlayer2] = useState(gameContext.player2);\n\n    if(Object.keys(player1).length === 0)\n        history.replace('/game');\n\n    const saveResultAndFinish = () => {\n        if(selectedCard !== null)\n        {\n            delete selectedCard.isSelected;\n            dispatch(addPokemonAPI(selectedCard, { localId : localId, idToken : localStorage.getItem('idToken') }));\n        }\n        dispatch(gameMethods.clean());\n        history.push('/game');\n    }\n    const pickCard = (key) => {\n        setPlayer2( prevState => {\n            return prevState.reduce((acc, item) =>{\n                const newItem = { ...item, isSelected : false};\n                if( newItem.id === key)\n                {\n                    setSelectedCard(item);\n                    newItem.isSelected = true;\n                }\n                acc.push(newItem);\n                return acc;\n            },[]);\n        })\n    }\n    return (\n        <React.Fragment>\n            <div className={s.root}>\n                <div className={cn(s.flex, s.playerOne)}>\n                    {\n                        Object.entries(player1).map(([key,item]) => <PokemonCard key={key} objectId={key}\n                        id={item.id} name={item.name} type={item.type} img={item.img} values={item.values}\n                        isActive={true} isSelected={item.isSelected} className={s.origin}\n                        />)\n                    }\n                </div>\n                <div className={s.wrapper}>\n                    <button onClick={saveResultAndFinish}\n                            disabled={( gameContext.winner === 1) && (selectedCard === null)}>\n                        FINISH GAME\n                    </button>\n                </div>\n                <div className={cn(s.flex, s.playerTwo)}>\n                    {\n                        player2.map((item,key) => <PokemonCard key={key} \n                        id={item.id} name={item.name} type={item.type} img={item.img} values={item.values}\n                        pickCard={ () =>{ if(gameContext.winner === 1) { pickCard(item.id);}}} isActive={true} isSelected={item.isSelected}\n                            className={s.origin}\n                        />)\n                    }\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default FinishPage;"]},"metadata":{},"sourceType":"module"}