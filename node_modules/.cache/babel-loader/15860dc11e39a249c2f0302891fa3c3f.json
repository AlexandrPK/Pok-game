{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandr/Desktop/Pok-game\\xA0\\u2014 \\u043A\\u043E\\u043F\\u0438\\u044F/src/components/MenuHeader/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { signIn, logOut, signUp, isLoggedIn } from \"../../store/auth\";\nimport LoginForm from \"../LoginForm\";\nimport Menu from \"../Menu\";\nimport Modal from \"../Modal\";\nimport NavBar from \"../NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MenuHeader = bgActive => {\n  _s();\n\n  const [isMenuOpened, setMenuOpened] = useState(undefined);\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const dispatch = useDispatch();\n  const loggedIn = useSelector(isLoggedIn);\n  useEffect(() => {\n    if (loggedIn === true) setIsOpenModal(prevState => false);\n  }, [loggedIn]);\n\n  const onMenuStateChange = () => {\n    setMenuOpened(prevState => !prevState);\n  };\n\n  const handleClickLogin = () => {\n    if (loggedIn === true) {\n      dispatch(logOut()); //window.location.replace('/');\n    } else if (loggedIn === false) setIsOpenModal(prevState => !prevState);\n  };\n\n  const handleSubmitLoginForm = async data => {\n    if (data.isSignin) {\n      dispatch(signIn(data));\n\n      if (loggedIn === true) {\n        setIsOpenModal(prevState => false);\n      }\n    } else {\n      dispatch(signUp(data));\n\n      if (loggedIn === true) {\n        setIsOpenModal(prevState => false);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Menu, {\n      onMenuStateChange: onMenuStateChange,\n      isMenuShowed: isMenuOpened\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n      isLoggedIn: loggedIn,\n      onMenuStateChange: onMenuStateChange,\n      bgActive: bgActive,\n      isMenuShowed: isMenuOpened,\n      onClickLogin: handleClickLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpenModal,\n      title: \"Auth...\",\n      onCloseModal: handleClickLogin,\n      children: /*#__PURE__*/_jsxDEV(LoginForm, {\n        onSubmit: handleSubmitLoginForm,\n        isOpenModal: isOpenModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MenuHeader, \"8eS+iFl+3qzqSQQrSxNL/ZWBCnM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = MenuHeader;\nexport default MenuHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuHeader\");","map":{"version":3,"sources":["/Users/aleksandr/Desktop/Pok-game — копия/src/components/MenuHeader/index.js"],"names":["React","useEffect","useState","useSelector","useDispatch","signIn","logOut","signUp","isLoggedIn","LoginForm","Menu","Modal","NavBar","MenuHeader","bgActive","isMenuOpened","setMenuOpened","undefined","isOpenModal","setIsOpenModal","dispatch","loggedIn","prevState","onMenuStateChange","handleClickLogin","handleSubmitLoginForm","data","isSignin"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAUC,MAAV,EAAkBC,MAAlB,EAA0BC,MAA1B,EAAkCC,UAAlC,QAAoD,kBAApD;AAEA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;;AAEA,MAAMC,UAAU,GAAIC,QAAD,IAAc;AAAA;;AAC7B,QAAM,CAACC,YAAD,EAAeC,aAAf,IAAgCd,QAAQ,CAACe,SAAD,CAA9C;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAMkB,QAAQ,GAAGhB,WAAW,EAA5B;AACA,QAAMiB,QAAQ,GAAGlB,WAAW,CAACK,UAAD,CAA5B;AACAP,EAAAA,SAAS,CAAE,MAAK;AACZ,QAAGoB,QAAQ,KAAK,IAAhB,EACQF,cAAc,CAACG,SAAS,IAAI,KAAd,CAAd;AACX,GAHQ,EAGP,CAACD,QAAD,CAHO,CAAT;;AAKA,QAAME,iBAAiB,GAAG,MAAM;AAC5BP,IAAAA,aAAa,CAACM,SAAS,IAAI,CAACA,SAAf,CAAb;AACH,GAFD;;AAGA,QAAME,gBAAgB,GAAG,MAAM;AAC3B,QAAGH,QAAQ,KAAI,IAAf,EACA;AACID,MAAAA,QAAQ,CAACd,MAAM,EAAP,CAAR,CADJ,CAEI;AACH,KAJD,MAKK,IAAIe,QAAQ,KAAK,KAAjB,EACDF,cAAc,CAACG,SAAS,IAAI,CAACA,SAAf,CAAd;AACP,GARD;;AASA,QAAMG,qBAAqB,GAAI,MAAOC,IAAP,IAAgB;AAC3C,QAAGA,IAAI,CAACC,QAAR,EACA;AACIP,MAAAA,QAAQ,CAACf,MAAM,CAACqB,IAAD,CAAP,CAAR;;AACA,UAAGL,QAAQ,KAAK,IAAhB,EACA;AACIF,QAAAA,cAAc,CAACG,SAAS,IAAI,KAAd,CAAd;AACH;AACJ,KAPD,MASA;AACIF,MAAAA,QAAQ,CAACb,MAAM,CAACmB,IAAD,CAAP,CAAR;;AACA,UAAGL,QAAQ,KAAK,IAAhB,EACA;AACIF,QAAAA,cAAc,CAACG,SAAS,IAAI,KAAd,CAAd;AACH;AACJ;AACJ,GAjBD;;AAkBA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,iBAAiB,EAAEC,iBAAzB;AAA4C,MAAA,YAAY,EAAER;AAA1D;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAQ,MAAA,UAAU,EAAEM,QAApB;AACQ,MAAA,iBAAiB,EAAEE,iBAD3B;AAEQ,MAAA,QAAQ,EAAET,QAFlB;AAGQ,MAAA,YAAY,EAAEC,YAHtB;AAIQ,MAAA,YAAY,EAAES;AAJtB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQI,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEN,WAAf;AAA4B,MAAA,KAAK,EAAC,SAAlC;AACQ,MAAA,YAAY,EAAEM,gBADtB;AAAA,6BAEI,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAEC,qBAArB;AAA4C,QAAA,WAAW,EAAEP;AAAzD;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAvDD;;GAAML,U;UAGeT,W,EACAD,W;;;KAJfU,U;AAyDN,eAAeA,UAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {  signIn, logOut, signUp, isLoggedIn } from \"../../store/auth\";\n\nimport LoginForm from \"../LoginForm\";\nimport Menu from \"../Menu\";\nimport Modal from \"../Modal\";\nimport NavBar from \"../NavBar\";\n\nconst MenuHeader = (bgActive) => {\n    const [isMenuOpened, setMenuOpened] = useState(undefined);\n    const [isOpenModal, setIsOpenModal] = useState(false);\n    const dispatch = useDispatch();\n    const loggedIn = useSelector(isLoggedIn)\n    useEffect( () =>{\n        if(loggedIn === true)\n                setIsOpenModal(prevState => false);\n    },[loggedIn])\n\n    const onMenuStateChange = () => {\n        setMenuOpened(prevState => !prevState);\n    }\n    const handleClickLogin = () => {\n        if(loggedIn ===true )\n        {\n            dispatch(logOut());\n            //window.location.replace('/');\n        }\n        else if( loggedIn === false)\n            setIsOpenModal(prevState => !prevState);\n    }\n    const handleSubmitLoginForm =  async (data) => {\n        if(data.isSignin)\n        {\n            dispatch(signIn(data));\n            if(loggedIn === true)\n            {\n                setIsOpenModal(prevState => false);\n            }\n        }\n        else\n        {\n            dispatch(signUp(data));\n            if(loggedIn === true)\n            {\n                setIsOpenModal(prevState => false);\n            }\n        }\n    }\n    return(\n        <React.Fragment>\n            <Menu onMenuStateChange={onMenuStateChange} isMenuShowed={isMenuOpened} />\n            <NavBar isLoggedIn={loggedIn}\n                    onMenuStateChange={onMenuStateChange} \n                    bgActive={bgActive} \n                    isMenuShowed={isMenuOpened}\n                    onClickLogin={handleClickLogin}/>\n\n            <Modal isOpen={isOpenModal} title='Auth...'\n                    onCloseModal={handleClickLogin}>\n                <LoginForm onSubmit={handleSubmitLoginForm} isOpenModal={isOpenModal}/>\n            </Modal>\n        </React.Fragment>\n    )\n}\n\nexport default MenuHeader;"]},"metadata":{},"sourceType":"module"}